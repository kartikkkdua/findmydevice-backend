{"ast":null,"code":"var _jsxFileName = \"/Users/kartikdua/find-my-device/frontend/src/components/MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst MapView = ({\n  deviceId\n}) => {\n  _s();\n  const [location, setLocation] = useState(null);\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`http://localhost:5000/api/devices/${deviceId}`);\n        setLocation(data.location);\n      } catch (error) {\n        console.error(\"Error fetching location\", error);\n      }\n    };\n    fetchLocation();\n    socket.on(\"locationUpdated\", data => {\n      if (data.deviceId === deviceId) {\n        setLocation(data.location);\n      }\n    });\n    return () => socket.off(\"locationUpdated\");\n  }, [deviceId]);\n  return location ? /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: location,\n    zoom: 15,\n    style: {\n      height: \"500px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: location,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"Device ID: \", deviceId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading location...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MapView, \"PTP6gujMiAtYQq3RoMoVBEZNym0=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","io","axios","jsxDEV","_jsxDEV","socket","MapView","deviceId","_s","location","setLocation","fetchLocation","data","get","error","console","on","off","center","zoom","style","height","width","children","url","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["/Users/kartikdua/find-my-device/frontend/src/components/MapView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst socket = io(\"http://localhost:5000\");\n\nconst MapView = ({ deviceId }) => {\n  const [location, setLocation] = useState(null);\n\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const { data } = await axios.get(`http://localhost:5000/api/devices/${deviceId}`);\n        setLocation(data.location);\n      } catch (error) {\n        console.error(\"Error fetching location\", error);\n      }\n    };\n\n    fetchLocation();\n\n    socket.on(\"locationUpdated\", (data) => {\n      if (data.deviceId === deviceId) {\n        setLocation(data.location);\n      }\n    });\n\n    return () => socket.off(\"locationUpdated\");\n  }, [deviceId]);\n\n  return location ? (\n    <MapContainer center={location} zoom={15} style={{ height: \"500px\", width: \"100%\" }}>\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      <Marker position={location}>\n        <Popup>Device ID: {deviceId}</Popup>\n      </Marker>\n    </MapContainer>\n  ) : (\n    <p>Loading location...</p>\n  );\n};\n\nexport default MapView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAO,0BAA0B;AACjC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMK,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,qCAAqCN,QAAQ,EAAE,CAAC;QACjFG,WAAW,CAACE,IAAI,CAACH,QAAQ,CAAC;MAC5B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDH,aAAa,CAAC,CAAC;IAEfN,MAAM,CAACW,EAAE,CAAC,iBAAiB,EAAGJ,IAAI,IAAK;MACrC,IAAIA,IAAI,CAACL,QAAQ,KAAKA,QAAQ,EAAE;QAC9BG,WAAW,CAACE,IAAI,CAACH,QAAQ,CAAC;MAC5B;IACF,CAAC,CAAC;IAEF,OAAO,MAAMJ,MAAM,CAACY,GAAG,CAAC,iBAAiB,CAAC;EAC5C,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,OAAOE,QAAQ,gBACbL,OAAA,CAACP,YAAY;IAACqB,MAAM,EAAET,QAAS;IAACU,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAClFnB,OAAA,CAACN,SAAS;MAAC0B,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtExB,OAAA,CAACL,MAAM;MAAC8B,QAAQ,EAAEpB,QAAS;MAAAc,QAAA,eACzBnB,OAAA,CAACJ,KAAK;QAAAuB,QAAA,GAAC,aAAW,EAAChB,QAAQ;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC,gBAEfxB,OAAA;IAAAmB,QAAA,EAAG;EAAmB;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAC1B;AACH,CAAC;AAACpB,EAAA,CAlCIF,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}